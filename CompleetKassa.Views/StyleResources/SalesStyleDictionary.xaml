<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <!--Foreground="#7A7A7A" Background="Transparent" BorderThickness="0"  Margin="10,2" TextAlignment="Center"-->
    <Style TargetType="TextBox" 
               BasedOn="{StaticResource {x:Type TextBox}}" x:Key="searchBox">
        <Setter Property="FontSize"  Value="12" />
        <Setter Property="Foreground" Value="#7A7A7A"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="10,2"/>
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="FontFamily" Value="Open Sans SemiBold"/>
    </Style>


    <DataTemplate x:Key="PurchasedTemplate">
        <StackPanel Orientation="Vertical">
            <TextBlock Text="{Binding Price}" />
            <TextBlock Text="{Binding Label}" />
            <TextBlock Text="{Binding Quantity}" />
            <TextBlock Text="{Binding Discount}" />
        </StackPanel>
    </DataTemplate>

    <Style x:Key="MainFont">
        <Setter Property="TextElement.FontFamily" Value="Open Sans Semibold"/>
    </Style>

    <Style x:Key="SemiFont">
        <Setter Property="FrameworkElement.Margin" Value="4"/>
        <Setter Property="TextElement.FontFamily" Value="Open Sans Light"/>
    </Style>


    <Style x:Key="ReceiptFont">
        <Setter Property="TextElement.FontFamily" Value="Open Sans Semibold"/>
        <Setter Property="TextElement.FontSize" Value="15"/>
        <Setter Property="TextElement.Foreground" Value="#7C7C7C"/>
    </Style>

    <ControlTemplate x:Key="SelectedItem" TargetType="{x:Type ListBoxItem}">
        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            
                                  />
        </Border>
    </ControlTemplate>
    <SolidColorBrush x:Key="Background" Color="#2E4051"/>


    <Style x:Key="SideButtons" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="#1F2E3C"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#1A2530" />
            </Trigger>
            <EventTrigger RoutedEvent="UIElement.PreviewMouseDown">
                <SoundPlayerAction Source="pack://application:,,,/CompleetKassa.Views;component/Sounds/buttonpress.wav" />
            </EventTrigger>
        </Style.Triggers>
    </Style>



    <Style TargetType="{x:Type Button}" x:Key="TabButtonFirst">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="0,0,0,0" Background="Red">
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="TxtBoxStyle">
        <Setter Property="CaretBrush" Value="#1F2E3C"/>
        <Setter Property="TextElement.Foreground" Value="White"/>
        <Setter Property="TextElement.FontFamily" Value="Open Sans Semibold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style TargetType="{x:Type Button}" x:Key="ReceiptSideButtons2">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"  CornerRadius="0,29,29,0"  HorizontalAlignment="Left" MaxHeight="65" MaxWidth="78">

                        <ContentPresenter RenderTransformOrigin="0.5,0.5" x:Name="RootGrid" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property ="IsPressed" Value ="True">
                            <Setter TargetName="RootGrid" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="ReceiptSideButtons">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid  >
                        <Border Background="{TemplateBinding Background}"/>
                        <Grid RenderTransformOrigin="0.5,0.5" x:Name="RootGrid">
                            <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                        </Grid>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property ="IsPressed" Value ="True">
                            <Setter TargetName="RootGrid" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type RepeatButton}" x:Key="EmptyButton">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid RenderTransformOrigin="0.5,0.5" x:Name="RootGrid">
                        <Border Background="{TemplateBinding Background}" />

                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property ="IsPressed" Value ="True">
                            <Setter TargetName="RootGrid" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="UIElement.PreviewMouseDown">
                <SoundPlayerAction Source="pack://application:,,,/CompleetKassa.Views;component/Sounds/buttonpress.wav" />
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="EmptyButton2">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid RenderTransformOrigin="0.5,0.5" x:Name="RootGrid">
                        <Border Background="{TemplateBinding Background}" />

                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property ="IsPressed" Value ="True">
                            <Setter TargetName="RootGrid" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="UIElement.PreviewMouseDown">
                <SoundPlayerAction Source="pack://application:,,,/CompleetKassa.Views;component/Sounds/buttonpress.wav" />
            </EventTrigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="{x:Type Button}" x:Key="CircleButton2">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Ellipse Fill="{TemplateBinding Background}" x:Name="elipse"/>
                        <Ellipse Fill="#0AC450" Width="20" Height="20"/>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type Button}" x:Key="CircleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  Background="{TemplateBinding Background}" CornerRadius="100">
                        <ContentPresenter RenderTransformOrigin="0.5,0.5" x:Name="rootgrid" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property ="IsPressed" Value ="True">
                            <Setter TargetName="rootgrid" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ToggleButton}" x:Key="RadButton">
        <Setter Property="FontSize" Value="24" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border RenderTransformOrigin="0.5,0.5" x:Name="rootgrid" Background="{TemplateBinding Background}" CornerRadius="100">
                        <Border  Margin="5" CornerRadius="100" Background="#0AC450" x:Name="elps" Visibility="Visible"/>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property ="IsChecked" Value ="True">
                            <Setter TargetName="elps" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property ="IsChecked" Value ="False">
                            <Setter TargetName="elps" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property ="IsPressed" Value ="True">
                            <Setter TargetName="rootgrid" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ToggleButton}" x:Key="PayButtons">
        <Setter Property="FontSize" Value="24" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="elps1" Background="{TemplateBinding Background}" CornerRadius="10" BorderBrush="White" BorderThickness="0">
                        <ContentPresenter  x:Name="Root" RenderTransformOrigin="0.5,0.5"  HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property ="IsChecked" Value ="True">
                            <Setter TargetName="elps1" Property="Background" Value="#6FBC69" />
                            <Setter TargetName="elps1" Property="BorderThickness" Value="2" />
                        </Trigger>
                        <Trigger Property ="IsChecked" Value ="False">
                            <Setter TargetName="elps1" Property="Background" Value="#2E4051" />
                            <Setter TargetName="elps1" Property="BorderThickness" Value="0" />
                        </Trigger>

                        <Trigger Property ="IsPressed" Value ="True">
                            <Setter TargetName="Root" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <!--For Side Receipt on Payment Toggle Button-->
    <Style TargetType="{x:Type ToggleButton}" x:Key="ReceiptSideToggleButton">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="#1F2E3C" x:Name="elps1" CornerRadius="0,29,29,0"  HorizontalAlignment="Left" MaxHeight="65" MaxWidth="78">

                        <ContentPresenter RenderTransformOrigin="0.5,0.5" x:Name="RootGrid" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property ="IsChecked" Value ="True">
                            <Setter TargetName="elps1" Property="Background" Value="#0193C6" />
                        </Trigger>
                        <Trigger Property ="IsChecked" Value ="False">
                            <Setter TargetName="elps1" Property="Background" Value="#1F2E3C" />
                        </Trigger>

                        <Trigger Property ="IsPressed" Value ="True">
                            <Setter TargetName="RootGrid" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>





    <!--Print Style Buttons-->
    <Style TargetType="{x:Type ToggleButton}" x:Key="PrintButtonsStyle">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="elps1" CornerRadius="50"  Background="#2E4051" BorderThickness="2" BorderBrush="White">
                        <Grid>
                            <ContentPresenter  RenderTransformOrigin="0.5,0.5" x:Name="RootGrid" Margin="10" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>

                        </Grid>


                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property ="IsChecked" Value ="True">
                            <Setter TargetName="elps1" Property="Background" Value="#6FBC69" />
                        </Trigger>
                        <Trigger Property ="IsChecked" Value ="False">
                            <Setter TargetName="elps1" Property="Background" Value="#2E4051" />
                        </Trigger>


                        <Trigger Property ="IsPressed" Value ="True">
                            <Setter TargetName="RootGrid" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>

        </Style.Triggers>
    </Style>

</ResourceDictionary>